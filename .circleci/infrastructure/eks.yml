Parameters:
  EKSClusterName:
    Type: String
    Description: Name of k8s cluster
    Default: EksCluster

  KeyPairName:
    Type: String
    Description: Name of an existing EC2 key pair (for SSH-access to the worker node instances)
    Default: EksKeypair
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description: CIDR for this VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: CIDR for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.0.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
    Description: CIDR for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
    Description: CIDR for the private subnet in the second Availability Zone
    Type: String
    Default: 10.0.3.0/24
Resources:
  EksSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !ImportValue
        Fn::Sub: '${EnvironmentName}-vpc'

  EKSRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "EKSRole"
      Description: "IAM role with eks-service-role."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  EKSCluster:
      Type: AWS::EKS::Cluster
      Properties:
        Name: !Ref EKSClusterName
        RoleArn: !GetAtt EKSRole.Arn
        ResourcesVpcConfig:
          SecurityGroupIds: 
            - !Ref EksSecGroup
          SubnetIds:
            - !ImportValue 
              Fn::Sub: '${EnvironmentName}-PublicSubnet1'
            - !ImportValue 
              Fn::Sub: '${EnvironmentName}-PublicSubnet2'
          EndpointPublicAccess: true
          EndpointPrivateAccess: true
        Logging:
          ClusterLogging:
            EnabledTypes:
              - Type: api
              - Type: audit
        Tags:
          - Key: "Name"
            Value: !Ref EKSClusterName