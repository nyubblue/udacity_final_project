version: 2.1

orbs:
  slack: circleci/slack@4.12.5

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            echo "This is the roll back"

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Get backend url
          command: |
            export BACKEND_IP="localhost"
            export API_URL="http://${BACKEND_IP}:3030"
            echo "API_URL = ${API_URL}"
            echo API_URL="http://${BACKEND_IP}:3030" >> frontend/.env
            echo NODE_ENV="production" >> frontend/.env
            echo | cat frontend/.env
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
            tar -czvf artifact-front.tar.gz dist
            # no error if existing, make a directory
            mkdir -p /tmp/workspace/dist
            mv artifact-front.tar.gz /tmp/workspace/dist/artifact-front.tar.gz
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - dist/artifact-front.tar.gz
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            touch .env
            echo NODE_ENV=production >> .env
            echo TYPEORM_HOST=$TYPEORM_HOST >> .env
            echo TYPEORM_CONNECTION=$TYPEORM_CONNECTION >> .env
            echo TYPEORM_DATABASE=$TYPEORM_DATABASE >> .env
            echo TYPEORM_ENTITIES=$TYPEORM_ENTITIES >> .env
            echo TYPEORM_MIGRATIONS=$TYPEORM_MIGRATIONS >> .env
            echo TYPEORM_MIGRATIONS_DIR=$TYPEORM_MIGRATIONS_DIR >> .env
            echo TYPEORM_PASSWORD=$TYPEORM_PASSWORD >> .env
            echo TYPEORM_PORT=$TYPEORM_PORT >> .env
            echo TYPEORM_USERNAME=$TYPEORM_USERNAME >> .env
            npm install
            npm run build
            cd ..
            tar -C backend -czvf artifact.tar.gz .
            # no error if existing, make a directory
            mkdir -p /tmp/workspace
            mv artifact.tar.gz /tmp/workspace/artifact.tar.gz
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - "artifact.tar.gz"
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  build-frontend-docker:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
            docker --version
      - run:
          name: build frontend objects
          command: |
            mkdir -p dist
            mv /tmp/workspace/dist/artifact-front.tar.gz dist/artifact-front.tar.gz

      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build


workflows:
  default:
    jobs:
      - build-frontend
      - build-frontend-docker:
          requires: [build-frontend]